version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/flutter-plugins-ci

  android-executor:
    macos:
      xcode: 11.6.0
    working_directory: ~/flutter-plugins-ci

  ios-executor:
    macos:
      xcode: 11.6.0
    working_directory: ~/flutter-plugins-ci

commands:
  install_flutter:
    description:
      Install Flutter and set up paths.
    parameters:
      flutter_version:
        description: Flutter version
        type: string
        default: stable
    steps:
      - run:
          name: Set up Flutter
          command: |
            echo 'export FLUTTER_HOME=${HOME}/sdks/flutter' >> $BASH_ENV
            echo 'export FLUTTER_VERSION=<< parameters.flutter_version >>' >> $BASH_ENV
            echo 'export FLUTTER_ROOT=${FLUTTER_HOME}' >> $BASH_ENV
            echo 'export PATH=${PATH}:${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin:${HOME}/.pub-cache/bin' >> $BASH_ENV
            source $BASH_ENV
            git clone --branch ${FLUTTER_VERSION} https://github.com/flutter/flutter.git ${FLUTTER_HOME}
            (yes || true) | flutter doctor --android-licenses && flutter doctor
  unit_test_flutter:
    description:
      Run flutter unit test on the specified plugin package.
    steps:
      - run: . .circleci/test_all_plugins.sh flutter-test
  unit_test_android:
    description:
      Run Android (Kotlin) unit test on the specified plugin package.
    steps:
      - run: . .circleci/test_all_plugins.sh android-test
  unit_test_ios:
    description:
      Run iOS (Swift) unit test on the specified plugin package.
    steps:
      - run: . .circleci/test_all_plugins.sh ios-test

jobs:
  unit_test_flutter:
    executor: build-executor
    steps:
      - install_flutter
      - checkout
      - unit_test_flutter

  unit_test_ios:
    executor: ios-executor
    steps:
      - install_flutter
      - checkout
      - unit_test_ios

  unit_test_android:
    executor: build-executor
    steps:
      - install_flutter
      - checkout
      - unit_test_android

  integ_test_ios_dummy:
    executor: ios-executor
    steps:
      - run: echo "Dummy iOS integ tests"

  integ_test_android_dummy:
    executor: ios-executor
    steps:
      - run: echo "Dummy Android integ tests"

  e2e_test_ios_dummy:
    executor: ios-executor
    steps:
      - run: echo "Dummy iOS e2e tests"

  e2e_test_android_dummy:
    executor: ios-executor
    steps:
      - run: echo "Dummy Android e2e tests"
  
  deploy_dummy:
    executor: build-executor
    steps:
      - run: echo "Dummy deploy"

releasable_branches: &releasable_branches
  branches:
    only:
      - release
      - master

workflows:
  test_deploy:
    jobs:
      - unit_test_flutter
      - unit_test_android
      - unit_test_ios
      - request_testing:
          type: approval
          requires:
            - unit_test_flutter
            - unit_test_android
            - unit_test_ios
          filters:
            branches:
              only: /pull\/[0-9]+/
      - integ_test_android_dummy:
          requires:
            - request_testing
      - integ_test_ios_dummy:
          requires:
            - request_testing
      - e2e_test_android_dummy:
          requires:
            - request_testing
      - e2e_test_ios_dummy:
          requires:
            - request_testing
      - request_deploy:
          type: approval
          requires:
            - integ_test_android_dummy
            - integ_test_ios_dummy
            - e2e_test_android_dummy
            - e2e_test_ios_dummy
      - deploy_dummy:
          requires:
            - request_deploy
  full_test_and_deploy:
    jobs:
      - unit_test_flutter
      - unit_test_android
      - unit_test_ios
      - integ_test_android_dummy
      - integ_test_ios_dummy
      - e2e_test_android_dummy
      - e2e_test_ios_dummy
      - request_deploy:
          type: approval
          requires:
            - unit_test_flutter
            - unit_test_android
            - unit_test_ios
            - integ_test_android_dummy
            - integ_test_ios_dummy
            - e2e_test_android_dummy
            - e2e_test_ios_dummy
      - deploy_dummy:
          requires:
            - request_deploy
    # filters:
    #   <<: *releasable_branches
